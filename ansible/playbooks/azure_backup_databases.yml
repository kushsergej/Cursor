---
- name: Azure PostgreSQL Flexible Server Individual Database Backup
  hosts: localhost
  gather_facts: false
  
  environment:
    AZURE_CLIENT_ID: "{{ azure_client_id }}"
    AZURE_SECRET: "{{ azure_secret }}"
    AZURE_SUBSCRIPTION_ID: "{{ azure_subscription_id }}"
    AZURE_TENANT: "{{ azure_tenant_id }}"
  
  vars:
    backup_timestamp: "{{ ansible_date_time.iso8601 | regex_replace(':', '-') | regex_replace('\\.', '-') }}"
    backup_dir: "{{ playbook_dir }}/../backups"
  
  tasks:
    - name: Create backup directory
      file:
        path: "{{ backup_dir }}"
        state: directory
        mode: '0755'
      
    - name: Get PostgreSQL Flexible Server information
      azure.azcollection.azure_rm_postgresqlflexible_info:
        resource_group: "{{ postgresql_resource_group }}"
        name: "{{ postgresql_server_name }}"
      register: postgresql_info
      
    - name: Display server information
      debug:
        msg: "PostgreSQL Server: {{ postgresql_info.ansible_facts.azure_postgresqlflexibleservers[0].name }}"
      
    - name: Extract connection details for database operations
      set_fact:
        connection_string: "{{ postgresql_info.ansible_facts.azure_postgresqlflexibleservers[0].connection_string }}"
        db_host: "{{ postgresql_info.ansible_facts.azure_postgresqlflexibleservers[0].connection_string | regex_search('host=([^;]+)', '\\1') }}"
        db_user: "{{ postgresql_info.ansible_facts.azure_postgresqlflexibleservers[0].connection_string | regex_search('user=([^;]+)', '\\1') }}"
        db_password: "{{ postgresql_info.ansible_facts.azure_postgresqlflexibleservers[0].connection_string | regex_search('password=([^;]+)', '\\1') }}"
        db_name: "{{ postgresql_info.ansible_facts.azure_postgresqlflexibleservers[0].connection_string | regex_search('dbname=([^;]+)', '\\1') }}"
      
    - name: List all databases in the server
      community.postgresql.postgresql_query:
        login_host: "{{ db_host }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
        db: "{{ db_name }}"
        query: "SELECT datname FROM pg_database WHERE datistemplate = false AND datname NOT IN ('postgres', 'azure_maintenance');"
      register: database_list
      
    - name: Display databases to backup
      debug:
        msg: "Databases to backup: {{ database_list.query_result | map(attribute='datname') | list }}"
      
    - name: Create Azure PostgreSQL Flexible Server backup for each database
      block:
        - name: Create individual database backup using Azure module
          azure.azcollection.azure_rm_postgresqlflexiblebackup:
            resource_group: "{{ postgresql_resource_group }}"
            server_name: "{{ postgresql_server_name }}"
            backup_name: "{{ item.datname }}-{{ backup_timestamp }}"
            state: present
          register: azure_backup_result
          
        - name: Display Azure backup result for {{ item.datname }}
          debug:
            msg: "Backup {{ item.datname }}: {{ azure_backup_result.changed }}"
            
        - name: Verify backup was created successfully for {{ item.datname }}
          assert:
            that:
              - azure_backup_result is defined
              - azure_backup_result.changed is defined
            fail_msg: "Azure backup creation failed for {{ item.datname }}"
            success_msg: "Azure backup created successfully for {{ item.datname }}"
            
      loop: "{{ database_list.query_result }}"
      
    - name: Get backup details for all databases
      azure.azcollection.azure_rm_postgresqlflexiblebackup_info:
        resource_group: "{{ postgresql_resource_group }}"
        server_name: "{{ postgresql_server_name }}"
      register: all_backups
      
    - name: Display all backups
      debug:
        msg: "Available backups: {{ all_backups.azure_postgresqlflexiblebackups | map(attribute='name') | list }}"
      
    - name: Calculate cutoff date for old backups
      set_fact:
        cutoff_date: "{{ (ansible_date_time.epoch | int) - (backup_retention_days | int * 86400) }}"
      
    - name: Filter old backups for deletion
      set_fact:
        old_backups: "{{ all_backups.azure_postgresqlflexiblebackups | selectattr('properties.created_time', 'defined') | selectattr('properties.created_time', 'lt', cutoff_date) | list }}"
      when: all_backups.azure_postgresqlflexiblebackups is defined
      
    - name: Cleanup old backups (keep only last {{ backup_retention_days }} days)
      azure.azcollection.azure_rm_postgresqlflexiblebackup:
        resource_group: "{{ postgresql_resource_group }}"
        server_name: "{{ postgresql_server_name }}"
        backup_name: "{{ item.name }}"
        state: absent
      loop: "{{ old_backups }}"
      when: old_backups is defined
      
    - name: Display cleanup summary
      debug:
        msg: "Cleaned up {{ old_backups | length }} old backup files"
      when: old_backups is defined
      
    - name: Display backup completion
      debug:
        msg: "Azure PostgreSQL Flexible Server individual database backups completed successfully"
